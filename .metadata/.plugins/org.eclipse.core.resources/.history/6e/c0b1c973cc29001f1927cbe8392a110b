package Pruebas;
import java.sql.*;

public class MariaDBExample {

    public static void main(String[] args) {
        String url = "jdbc:mysql://localhost:3306/nombre_base_de_datos";
        String user = "usuario";
        String password = "contraseña";
        String tableName = "nombre_tabla";

        try {
            // Leer datos de la tabla
            Object[][] data = readTableData(url, user, password, tableName);

            // Actualizar la tabla con los mismos datos
            updateTable(url, user, password, tableName, data);

            // Mostrar mensaje de éxito
            System.out.println("Datos actualizados exitosamente en la tabla " + tableName);
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Método para leer datos de una tabla
    public static Object[][] readTableData(String url, String user, String password, String tableName) throws SQLException {
        try (Connection connection = DriverManager.getConnection(url, user, password)) {
            String sql = "SELECT * FROM " + tableName;
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                try (ResultSet resultSet = statement.executeQuery()) {
                    ResultSetMetaData metaData = resultSet.getMetaData();
                    int columnCount = metaData.getColumnCount();

                    // Contar el número de filas en el ResultSet
                    int rowCount = 0;
                    while (resultSet.next()) {
                        rowCount++;
                    }

                    // Volver al inicio del ResultSet
                    resultSet.beforeFirst();

                    // Crear una matriz bidimensional para almacenar los datos
                    Object[][] data = new Object[rowCount][columnCount];

                    // Procesar los resultados de la consulta y almacenarlos en la matriz
                    int row = 0;
                    while (resultSet.next()) {
                        for (int i = 1; i <= columnCount; i++) {
                            Object value = resultSet.getObject(i);
                            data[row][i - 1] = value;
                        }
                        row++;
                    }

                    return data;
                }
            }
        }
    }

    // Método para actualizar una tabla con nuevos datos
    public static void updateTable(String url, String user, String password, String tableName, Object[][] newData) throws SQLException {
        try (Connection connection = DriverManager.getConnection(url, user, password)) {
            // Eliminar los datos existentes en la tabla
            String deleteSql = "DELETE FROM " + tableName;
            try (PreparedStatement deleteStatement = connection.prepareStatement(deleteSql)) {
                deleteStatement.executeUpdate();
            }

            // Insertar los nuevos datos en la tabla
            String insertSql = generateInsertStatement(tableName, newData);
            try (PreparedStatement insertStatement = connection.prepareStatement(insertSql)) {
                insertStatement.executeUpdate();
            }
        }
    }

    // Método para generar la sentencia SQL de inserción
    private static String generateInsertStatement(String tableName, Object[][] data) {
        StringBuilder sql = new StringBuilder();
        sql.append("INSERT INTO ").append(tableName).append(" VALUES ");

        for (int i = 0; i < data.length; i++) {
            sql.append("(");
            for (int j = 0; j < data[i].length; j++) {
                if (j > 0) {
                    sql.append(",");
                }
                if (data[i][j] instanceof String) {
                    sql.append("'").append(data[i][j]).append("'");
                } else {
                    sql.append(data[i][j]);
                }
            }
            sql.append(")");
            if (i < data.length - 1) {
                sql.append(",");
            }
        }

        return sql.toString();
    }
}